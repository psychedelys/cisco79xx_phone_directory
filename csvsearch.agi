#!/usr/bin/env python

#   Asterisk csv contact search directory: a agi-script to use an extracted 
#   csv contacts file as the phone directory for asterisk.
#   Copyright (C) 2013 psychedelys <psychedelys@gmail.com>
#   http://github.com/psychedelys/cisco79xx_phone_directory
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.

import sys
import unicodedata
from xml.etree import ElementTree
import csv

# CONFIGURATION REQUIRED:
# Change these to fit your needs.
CONTACTS_FILE = "contacts_extract.csv"

class DirectoryEntry:
    """
    Contains the phone number, owner's name and the label associated
    to the phone number.
    """
    def __init__(self, number, name, label):
        # Discard non-digit characters
        self.number = number
        self.name = name
        self.label = label

    def __str__(self):
        if self.label:
            return "%s (%s)" % (self.name, self.label,)
        else:
            return self.name

def get_directory():
    """
    Parses the Google Contacts file and returns its contents as a list
    of DirectoryEntry instances.
    """
    #print "parsing file %s" % CONTACTS_FILE

    directory = []

    for line in csv.reader(open(CONTACTS_FILE), delimiter=';', skipinitialspace=True):
        # print "added: '%s' '%s' '%s'" % (line[2],line[0],line[1])
        # directory.append(DirectoryEntry(number, name, label))
        directory.append(DirectoryEntry(line[2],line[0],line[1]))

    return directory

def main(number):
   """

   """
   # Get the directory and filter the entries based on the keyword, then sort them
   getphonebook = get_directory()
   directory = sorted([entry for entry in getphonebook if number.lower() in unicode(entry.name).lower() or number in unicode(entry.number)], key=lambda entry: unicode(entry))
   if directory:
      for entry in directory:
          print "SET CALLERID \"%s <%s>\"" % (entry, number)
          break 
   elif number[0] == '0':
      modnumber = number.lstrip('0')
      directory = sorted([entry for entry in getphonebook if modnumber.lower() in unicode(entry.name).lower() or modnumber in unicode(entry.number)], key=lambda entry: unicode(entry))
      for entry in directory:
          print "SET CALLERID \"%s <%s>\"" % (entry, number)
          break 
   
if __name__ == "__main__":
    """
    Starts the main process for the phone reverse lookup.
    """
    #print sys.argv[1]
    main(sys.argv[1])
    sys.exit(0)
